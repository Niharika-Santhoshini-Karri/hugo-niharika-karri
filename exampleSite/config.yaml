It looks like your YAML configuration is correctly indented. However, there are a few minor issues and improvements you might consider:

1. The `school name` field in the education section should be corrected to `school_name` (with an underscore instead of a space).
2. The `Paginate` key should be corrected to `paginate` (lowercase).
3. In the `hero` section, the `bottomImage` property should have its `enable` property aligned with other properties.
4. In the `hero` section, the `button` property should have its `download` property as a boolean (`true` or `false`) instead of a string.
5. The `contact` section can be improved by removing the `formspree` comments and the `contact.email` reference.

Here's a corrected version of your YAML configuration:

```yaml
baseURL: "https://hugo-profile.netlify.app"
languageCode: "en-us"
title: "Niharika Santhoshini Karri"
theme: hugo-profile

outputs:
  home:
    - "HTML"
    - "RSS"
    - "JSON"
  page:
    - "HTML"
    - "RSS"

paginate: 3
enableRobotsTXT: true

markup:
  goldmark:
    renderer:
      unsafe: true

Menus:
  main:
    - identifier: blog
      name: Blog
      title: Blog posts
      url: /blogs
      weight: 1
    - identifier: gallery
      name: Gallery
      title: Blog posts
      url: /gallery
      weight: 2

params:
  title: "Hugo Profile"
  description: Text about my cool site
  favicon: "/fav.png"
  useBootstrapCDN: false
  mathjax: false
  animate: true

  navbar:
    align: ms-auto
    brandName: "Hugo Profile"
    disableSearch: false
    stickyNavBar:
      enable: true
      showOnScrollUp: true
    menus:
      disableAbout: false
      disableExperience: false
      disableEducation: false
      disableProjects: false
      disableAchievements: false
      disableContact: false

  hero:
    enable: true
    intro: "Hi, my name is"
    title: "Niharika."
    subtitle: "I code."
    content: "A passionate web app developer. I tend to make use of modern web technologies to build websites that looks great, feels fantastic, and functions correctly."
    image: /images/dp.jpeg
    bottomImage:
      enable: true
    button:
      enable: true
      name: "Download Resume"
      url: "https://github.com/Niharika-Santhoshini-Karri/Resume/blob/ba780330101de3d7d42b56189718fa3ec8489836/Niharika_K_resume.pdf"
      download: true
      newPage: false

    socialLinks:
      fontAwesomeIcons:
        - icon: fab fa-github
          url: https://github.com/Niharika-Santhoshini-Karri
        - icon: fab fa-x-twitter
          url: https://example.com
      customIcons:
        - icon: /fav.png
          url: "https://example.com"

  about:
    enable: true
    title: "About Me"
    image: "/images/aboutMe.jpeg"
    content: |-
      I am a software developer with a passion for web development. I have a background in Information Systems and mathematics, and I have a strong interest in the intersection of technology and art. I am currently doing my masters at Northeastern University, Boston.
      I worked as a programmer analyst at Cognizant, India for 1+ years.
      "Here is my tech stack:"

      Programming Languages - "Java, Python, C, C++.

      Libraries - Pandas, SciPy, NumPy, Scikit-learn, Matplotlib, TensorFlow, PyTorch.

      Databases - SQL (MySQL, Oracle, SQL Server), NoSQL (MongoDB), Power BI, Tableau.

      Web Technologies - HTML, CSS, JavaScript, React JS, Angular JS, jQuery, Bootstrap.
      
      Tools and Services - Git, Windows, Microsoft Office, SASS, Eclipse IDE, Lucid chart, Slack, Visio, Apache Tomcat.

  experience:
    enable: true
    items:
      - job: "Programmer Analyst"
        company: "Cognizant"
        date: "February 2021 - August 2022"
        content: |-
          - Architected an employee database platform, adeptly integrating data creation and storage processes using Spring Boot.
          - Deployed intuitive React.js user interface, integrating AJAX calls to ensure real-time communication with backend APIs.
          - Led system optimization, simulated scenarios to evaluate performance, culminating in a 15% boost in application response.
          - Implemented RESTful APIs, seamlessly connecting the Spring Boot backend with the dynamic React.js frontend for efficient data flow and synchronization.
          - Executed stringent data integrity checks, curbing inconsistencies, and enhancing error resilience with website maintenance.

      - job: "Freelancer Software Developer"
        company: "Azista"
        date: "May 2020 - December 2021"
        content: |-
          - Transformed a product-based corporation online presence by overhauling their e-commerce platform with React JS.
          - Utilized the fetch

 API to communicate with backend services, ensuring secure data transmission during online transactions.
          - Improved transaction security and fostered customer trust through the integration of secure payment gateways using Spring MVC, contributing to a 30% rise in successful transactions.
          - Boosted user engagement by 25% through the implementation of visually appealing components for the product catalog.

  education:
    enable: true
    items:
      - title: "Masters in Information Systems"
        school_name: "Northeastern University, Boston"
        date: "2022 - 2024"
        GPA: "3.67 out of 4.0"
        content: |-
          Relevant Coursework:
            - Application Engineering and Development, Data Management and Database design, Data Science Methods, and Tools, Web Designing and User Experience, Software Quality Control and Design.
      - title: "Bachelor of Technology in Civil Engineering"
        school_name: "Vellore Institute of Technology"
        date: "2017 - 2021"
        GPA: "8.71 out of 10.0"
        content: |-
          Relevant Coursework:
            - Problem-solving and Object-oriented Programming, Statistics for Engineers, Java Programming.

projects:
  enable: true
  items:
    - title: Plasma Donation Management System
      content: |-
        - Deployed a Java Swing Plasma Donation System with Oracle SQL for robust data management.
        - Implemented Transitory Software using geospatial algorithms for precise plasma donor localization.
        - Unified plasma centers, hospitals, and NGOs, reducing coordination efforts by 70%.
      image: /images/plasma.jpg
      featured:
        name: View Project
        link: https://github.com/Niharika-Santhoshini-Karri/FinalProject
      badges:
        - "Java Swing"
        - "oracle SQL"

    - title: Forecasting Game Triumphs, A Google Play Data Study
      content: |-
        - Analyzed Google Play Store data to forecast game success using Python, TensorFlow, and Keras.
      image: /images/playstore.png
      featured:
        name: View Project
        link: https://medium.com/@karri.n/data-cleaning-feature-selection-modeling-and-interpretability-using-classification-models-48086e3d98b6
      badges:
        - "Python"
        - "TensorFlow"
        - "Keras"
        - "Machine Learning"

    - title: Movie Streaming Management System
      content: |-
        - Developed online video streaming platform enabling personalized watchlists and user subscriptions.
        - Optimized data distribution with TMDB API, reducing execution time by 30%.
        - Engineered a user-centric platform fostering content customization and seamless interaction. 
      image: /images/projects/yelp.jpg
      featured:
        name: View Project
        link: https://github.com/Niharika-Santhoshini-Karri/INFO6150_FinalProject
      badges:
        - "MongoDB"
        - "React JS"
        - "Node JS"

    - title: Car Rental Service Agency
      content: |-
        - Developed a Car Rental Service Agency using JavaFX, implementing streamlined operations through the incorporation of MVC architecture and JDBC connectivity.
        - Devised sophisticated CRUD functionalities, enabling users to select, reserve, and oversee vehicles, with availability updates.
        - Ensured a secure login mechanism and intuitive dashboard for user-friendly navigation.
        - Created responsive pages for streamlined vehicle management, booking, customer records, and rental history.
      image: /images/carRental.png
      featured:
        name: View Project
        link: https://github.com/Niharika-Santhoshini-Karri/OOD_Project
      badges:
        - "Java FX"
        - "Scene Builder"
        - "MySQL"

    - title: Propensity Score Matching Analysis for Treatment Effect Estimation
      content: |-
        - Implemented a comprehensive retail analytics project focusing on U.S. shopping sales forecasting using machine learning techniques and hyperparameter optimization, achieving precise sales predictions with an XGBoost model that demonstrated high accuracy and a robust R-squared value.
      image: /images/propensity.jpg
      featured:
        name: View Project
        link: https://medium.com/@karri.n/data-cleaning-feature-selection-modeling-and-interpretability-using-classification-models-48086e3d98b6
      badges:
        - "Python"
        - "Deep Learning"
        - "Causal Inference"

contact:
  enable: true
  content: My inbox is always open. Whether you have a question or just want to say hi, Iâ€™ll try my best to get back to you!
  email: gurusabarisha@gmail.com
  btnName: Mail me

footer:
  recentPosts:
    path: "blogs"
    count: 3
    title: Recent Posts
    enable: true
    disableFeaturedImage: false
  socialNetworks:
    github: https://github.com
    linkedin: https://linkedin.com
    twitter: https://twitter.com
    instagram: https://instagram.com
    facebook: https://facebook.com

listPages:
  disableFeaturedImage: false

singlePages:
  readTime:
    enable: true
    content: "min read"
  scrollprogress:
    enable: true

terms:
  read: "Read"
  toc: "Table Of Contents"
  copyright: "All rights reserved"
  pageNotFound: "Page not found"
  emailText: "Check out this site"

datesFormat:
  article: "Jan 2, 2006"
  articleList: "Jan 2, 2006"
  articleRecent: "Jan 2, 2006"